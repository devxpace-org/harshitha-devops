AWSTemplateFormatVersion: 2010-09-09
Description: Creating a first VPC with CloudFormation

Resources:
  DevxpaceVPC1:
    Type: AWS::EC2::VPC
    Properties:  
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: DevxpaceVPC1         

  DevxpaceSubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:  
      VpcId: 
        Ref : DevxpaceVPC1
      CidrBlock: 10.0.0.0/23
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: Name
          Value: DevxpaceSubnetPublic1

  DevxpaceSubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:  
      VpcId: 
        Ref : DevxpaceVPC1
      CidrBlock: 10.0.2.0/23
      AvailabilityZone: "us-east-1b"
      Tags:
        - Key: Name
          Value: DevxpaceSubnetPublic2

  DevxpaceSubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:  
      VpcId: 
        Ref : DevxpaceVPC1
      CidrBlock: 10.0.4.0/23
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: Name
          Value: DevxpaceSubnetPrivate1

  DevxpaceSubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:  
      VpcId: 
        Ref : DevxpaceVPC1
      CidrBlock: 10.0.6.0/23
      AvailabilityZone: "us-east-1b"
      Tags:
        - Key: Name
          Value: DevxpaceSubnetPrivate2

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties :
      Tags: 
        - Key : Name
          Value : Devxpace-IG-Public

  MyGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DevxpaceVPC1
      InternetGatewayId: !Ref InternetGateway 

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: DevxpaceVPC1
      Tags:
        - Key: Name
          Value: Devxpace-RT-public  

  MyRoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: 
        Ref : RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: 
        Ref : InternetGateway

  MySubnetAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: 
        Ref : DevxpaceSubnetPublic1
      RouteTableId:
        Ref : RouteTablePublic   

  MySubnetAssociationPublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: 
        Ref : DevxpaceSubnetPublic2
      RouteTableId: 
        Ref : RouteTablePublic       

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt ElasticIP.AllocationId
      SubnetId: !Ref DevxpaceSubnetPublic1
      Tags: 
        - Key : Name
          Value : Devxpace-NG-PUBLIC1   

  MyRoutePrivate:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: 
        Ref : RouteTablePrivate
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: 
        Ref : NATGateway   


  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: DevxpaceVPC1
    Properties:
      Domain: vpc

  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref : DevxpaceVPC1
      Tags:
        - Key: Name
          Value: Devxpace-RT-private

  MySubnetAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: 
        Ref : DevxpaceSubnetPrivate1
      RouteTableId: 
        Ref : RouteTablePrivate

  MySubnetAssociationPrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: 
        Ref : DevxpaceSubnetPrivate2
      RouteTableId: 
        Ref : RouteTablePrivate

  myNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: DevxpaceVPC1
      Tags:
        - Key: Name
          Value: Devxpace-NACL-private-us-east-1a

  myNetworkAcl2:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: DevxpaceVPC1
      Tags:
        - Key: Name
          Value: Devxpace-NACL-public-us-east-1b

  Inboundnaclpublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref myNetworkAcl2
      RuleNumber: 100
      Protocol: 6 
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  outboundnaclpublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref myNetworkAcl2
      RuleNumber: 100
      Protocol: 6 
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  Inboundhttpsnaclpublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref myNetworkAcl2
      RuleNumber: 200
      Protocol: 6 
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  outboundhttpsnaclpublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref myNetworkAcl2
      RuleNumber: 200
      Protocol: 6 
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref DevxpaceSubnetPublic1
      NetworkAclId: !Ref myNetworkAcl2

  NaclAssociation02:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref DevxpaceSubnetPublic2
      NetworkAclId: !Ref myNetworkAcl2

  NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref DevxpaceSubnetPrivate1
      NetworkAclId: !Ref myNetworkAcl

  NaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref DevxpaceSubnetPrivate1
      NetworkAclId: !Ref myNetworkAcl
